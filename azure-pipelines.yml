trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'a123596c-77df-4ed2-8b6e-8145e7a04e41'
  imageRepository: 'vnodeapp'
  containerRegistry: 'myvueapp.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      type: server
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: ValidateKubernetesManifests
  displayName: 'Run Kube-score'
  jobs:
  - job: KubeScoreValidation
    displayName: 'KubeScore Validation'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - script: |
        echo "Listing contents of $(System.DefaultWorkingDirectory)"
        ls -la $(System.DefaultWorkingDirectory)
    - script: |
        docker pull zegl/kube-score:latest
        docker run -d --name kube-score-runner -v $(System.DefaultWorkingDirectory)/k8s:/project zegl/kube-score score *.yaml
        docker logs kube-score-runner > kube-score-output.txt 2>&1
    - script: |
        if grep -q 'critical' kube-score-output.txt; then
          echo "##vso[task.setvariable variable=isCritical]true"
        fi
        
- stage: manual_approval
  displayName: Manual Approval
  dependsOn: []
  jobs:
  - deployment: test_job
    displayName: Manual Approval
    environment: sastcheck
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'akscon'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                set -e
                az aks get-credentials --resource-group dont_let_the_bed_bug_bite --name MyAKSCluster --overwrite-existing
                kubectl apply -f $(System.DefaultWorkingDirectory)/k8s



