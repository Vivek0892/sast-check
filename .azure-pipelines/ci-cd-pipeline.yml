trigger:
- main

resources:
- repo: self

variables:
  imageName: 'nodejs-app:$(Build.BuildId)'
  # Make sure to define 'dockerRegistryServiceConnection' in your Azure DevOps project settings
  # This should point to your service connection for the Azure Container Registry
  dockerRegistryServiceConnection: 'cloud_regist'

stages:
- stage: Build
  displayName: 'Build Image'
  jobs:
  - job: BuildImage
    displayName: 'Build Docker Image'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: 'Build and Tag Docker Image'
      inputs:
        command: 'build'
        dockerfile: 'Dockerfile'
        tags: |
          $(imageName)
    
      #displayName: 'Push Image to Azure Container Registry'
      #inputs:
        command: 'push'
        repository: 'myvueapp.azurecr.io'
        tags: |
          $(imageName)
        containerRegistry: |
          $(dockerRegistryServiceConnection)


# #- stage: Push
# #  displayName: 'Push Image to ACR'
# #  jobs:
# #  - job: PushImage
#     displayName: 'Push Docker Image'
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     - task: Docker@2
#       displayName: 'Push Image to Azure Container Registry'
#       inputs:
#         command: 'push'
#         repository: 'myvueapp.azurecr.io'
#         tags: |
#           $(imageName)
#         containerRegistry: |
#           $(dockerRegistryServiceConnection)

- stage: ValidateKubernetesManifests
  displayName: 'Validate Kubernetes Manifests'
  jobs:
  - job: KubeScoreValidation
    displayName: 'Kube-Score Validation'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - script: |
        docker pull zegl/kube-score:latest
        docker run --rm -v $(System.DefaultWorkingDirectory)/k8s:/k8s zegl/kube-score score /k8s/*.yaml
      displayName: 'Run Kube-score'
    # Note: Changed '/deployment' to '/k8s' to match standard naming conventions. Adjust as needed for your directory structure.

